from telegram import Update, ForceReply, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters


TOKEN = ''


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    current_update = update
    current_context = context
    welcome_message = (rf"""
    –ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!üëãüéâ
–Ø –í–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç, –≥–æ—Ç–æ–≤—ã–π –ø–æ–º–æ—á—å –í–∞–º —Å –ø–æ–∏—Å–∫–æ–º –∏ –∞–Ω–∞–ª–∏–∑–æ–º –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ –±–∏—Ä–∂–µ —Ç—Ä—É–¥–∞ HeadHunter!
    """)

    keyboard = [
        [InlineKeyboardButton("–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π", callback_data='choose_vacancies')],
        [InlineKeyboardButton("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data='select')],
        [InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞", callback_data='search_history')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_html(text=welcome_message, reply_markup=reply_markup)


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.run_polling()


if __name__ == '__main__':
    main()
